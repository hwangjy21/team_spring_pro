<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myweb.www.repository.PortfolioDAO">
	<insert id="insert">
		insert into
		portfolio(title,introduction,id,home_type,room_cnt,family_type,home_size,home_style,user_nm)
		values(#{title},#{introduction},#{id},#{homeType},#{roomCnt},#{familyType},#{homeSize},#{homeStyle},#{userNm})
	</insert>
	<select id="selectMaxPno" resultType="long">
		select max(pno) from
		portfolio
	</select>
	<select id="getListPortfolio"
		resultType="com.myweb.www.domain.PortfolioVO">
		select * from portfolio
		<include refid="filter"></include>
		order by pno desc
	</select>
	<select id="getListPortfolio1"
		resultType="com.myweb.www.domain.PortfolioVO">
		select * from portfolio
		order by pno desc
	</select>
	<select id="getListMyPortfolio"
		resultType="com.myweb.www.domain.PortfolioVO">
		select * from portfolio where id=#{id} order by pno desc
	</select>
	<select id="getListFilter"
		resultType="com.myweb.www.domain.PortfolioVO">
		select * from portfolio
		<include refid="filter"></include>
		<include refid="order"></include>
	</select>
	<select id="getDetailPvo"
		resultType="com.myweb.www.domain.PortfolioVO">
		select * from portfolio where pno=#{pno}
	</select>

	<update id="updatePortfolioLikeQty">
		update portfolio set like_qty=(select count(*) from
		heart where pno=portfolio.pno)
	</update>

	<update id="updateReadCount">
		update portfolio set read_qty=read_qty+1 where
		pno=#{pno}
	</update>
	<select id="selectId" resultType="String">
		select id from portfolio where
		pno=#{pno}
	</select>
	<select id="heartCount" resultType="int">
		SELECT COALESCE(SUM(like_qty), 0)
      FROM portfolio
      WHERE id = #{id};
	</select>
	<delete id="deletePortfolio">
		delete from portfolio where pno=#{pno}
	</delete>
	<update id="updatePortfolio">
		update portfolio set
		title=#{title},introduction=#{introduction},home_type=#{homeType},room_cnt=#{roomCnt},family_type=#{familyType},home_size=#{homeSize},home_style=#{homeStyle},mod_date=now()
		where pno=#{pno}
	</update>
	<select id="mainPostPdtoList"
		resultType="com.myweb.www.domain.PortfolioVO">
		select * from portfolio where home_size between
		#{sliderOne} and #{sliderTwo}
	</select>
	<select id="getHeartList"
		resultType="com.myweb.www.domain.PortfolioVO">
		select p.pno, p.title, p.id, p.user_nm, p.like_qty,
		p.home_style, p.family_type from heart h right join portfolio p on
		h.pno = p.pno where h.id = #{id};
	</select>
	<select id="getPortfolio"
		resultType="com.myweb.www.domain.PortfolioVO">
		select * from portfolio where pno = #{pno}
	</select>

	<sql id="filter">
		<trim prefix="where" suffixOverrides="and">
			<if test="id != null and id !=''">
				id=#{id} and
			</if>
			<if test="homeTypeSh != null and homeTypeSh !=''">
				home_type=#{homeTypeSh} and
			</if>
			<if test="roomCntSh != null and roomCntSh !=''">
				room_cnt=#{roomCntSh} and
			</if>
			<if test="familyTypeSh != null and familyTypeSh !=''">
				family_type=#{familyTypeSh} and
			</if>
			<if test="homeStyleSh != null and homeStyleSh !=''">
				home_style=#{homeStyleSh} and
			</if>
			<if test="sliderOneVal !=0 or sliderTwoVal !=70">
				home_size between #{sliderOneVal} and #{sliderTwoVal} and
			</if>
		</trim>
	</sql>

	<sql id="order">
		<if test="order == null or order ==''">
			order by pno desc
		</if>
		<if test="order != null and order !=''">
			<choose>
				<when test="order eq '최신순'.toString()">
					order by pno desc
				</when>
				<when test="order eq '오래된순'.toString()">
					order by pno
				</when>
				<when test="order eq '인기순'.toString()">
					order by like_qty desc
				</when>
			</choose>
		</if>
	</sql>



</mapper>